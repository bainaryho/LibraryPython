# 도서에 대한 클래스 선언
class Book:
    def __init__(self, id, title, author, publisher, is_available):
        self.id = id
        self.title = title
        self.author = author
        self.publisher = publisher
        self.is_available = is_available

    def book_info(self):
        # (기본) 사용자는 도서의 ID 혹은 이름을 입력하여 도서의 정보를 조회 합니다.
        # (기본) 도서의 정보는 도서의 ID, 이름, 저자, 출판사 정보를 포함합니다.
        # (심화) 도서의 상태(대출 가능, 대출 중)가 표시됩니다.
        # (심화) 도서의 상태는 도서가 대출 가능한 상태인지, 대출 중인 상태인지를 나타냅니다.
        # (심화) 도서가 대출 중인 상태인 경우, 도서의 대출 정보를 함께 출력합니다.
        pass

    def book_loan(self):
        # 도서 대출 기능 (기본)
        # (기본) 사용자는 콘솔을 통해 도서의 ID 혹은 이름을 입력하여 도서를 대출합니다.
        # (기본) 대출하면 도서의 상태를 대출중으로 변경합니다.
        # (심화) 대출중인 도서를 모두 출력합니다.
        # (심화) 도서가 이미 대출 중일 경우, 대출이 불가능하다고 출력합니다.
        pass

    def book_return(self):
        # 도서 반납 기능 (기본)
        # (기본) 반납을 원하는 도서의 ID 혹은 이름을 입력하여 반납합니다.
        # (기본) 반납하면 도서의 상태가 대출 가능으로 변경됩니다.
        pass

    def book_loan_info(self):
        # 대출 정보 조회 기능 (심화)
        # 대출한 도서의 정보를 모두 조회할 수 있습니다.
        # 대출 정보는 도서의 ID, 이름, 저자, 출판사, 대출 날짜, 반납일자로 구성됩니다.
        # 대출 정보는 대출 날짜를 기준으로 내림차순으로 정렬됩니다.
        pass

    def book_input(self):
        # 도서추가 데이터 입력 기능 (기본)
        # (기본) 사용자는 콘솔을 통해 도서의 정보를 입력하여 데이터베이스에 저장합니다.
        # (기본) 도서의 정보는 도서의 ID, 이름, 저자, 출판사 정보를 포함합니다.
        # (심화) 파일을 통해 도서의 정보를 입력하여 데이터베이스에 저장합니다. (csv, json, xml 등)
        pass
